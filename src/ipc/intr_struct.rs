# [doc = r"Register block"] # [repr (C)] pub struct INTR_STRUCT { intr : INTR , intr_set : INTR_SET , intr_mask : INTR_MASK , intr_masked : INTR_MASKED , } impl INTR_STRUCT { # [doc = "0x00 - Interrupt"] # [inline (always)] pub const fn intr (& self) -> & INTR { & self . intr } # [doc = "0x04 - Interrupt set"] # [inline (always)] pub const fn intr_set (& self) -> & INTR_SET { & self . intr_set } # [doc = "0x08 - Interrupt mask"] # [inline (always)] pub const fn intr_mask (& self) -> & INTR_MASK { & self . intr_mask } # [doc = "0x0c - Interrupt masked"] # [inline (always)] pub const fn intr_masked (& self) -> & INTR_MASKED { & self . intr_masked } } # [doc = "INTR (rw) register accessor: Interrupt\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`intr::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`intr::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@intr`]
module"] pub type INTR = crate :: Reg < intr :: INTR_SPEC > ; # [doc = "Interrupt"] pub mod intr ; # [doc = "INTR_SET (rw) register accessor: Interrupt set\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`intr_set::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`intr_set::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@intr_set`]
module"] pub type INTR_SET = crate :: Reg < intr_set :: INTR_SET_SPEC > ; # [doc = "Interrupt set"] pub mod intr_set ; # [doc = "INTR_MASK (rw) register accessor: Interrupt mask\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`intr_mask::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`intr_mask::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@intr_mask`]
module"] pub type INTR_MASK = crate :: Reg < intr_mask :: INTR_MASK_SPEC > ; # [doc = "Interrupt mask"] pub mod intr_mask ; # [doc = "INTR_MASKED (r) register accessor: Interrupt masked\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`intr_masked::R`].  See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@intr_masked`]
module"] pub type INTR_MASKED = crate :: Reg < intr_masked :: INTR_MASKED_SPEC > ; # [doc = "Interrupt masked"] pub mod intr_masked ;