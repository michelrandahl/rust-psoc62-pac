# [doc = r"Register block"] # [repr (C)] pub struct RegisterBlock { ctl : CTL , status : STATUS , _reserved2 : [u8 ; 0x08] , cmd : CMD , _reserved3 : [u8 ; 0x07ac] , intr : INTR , intr_set : INTR_SET , intr_mask : INTR_MASK , intr_masked : INTR_MASKED , _reserved7 : [u8 ; 0x30] , cnt_struct : () , } impl RegisterBlock { # [doc = "0x00 - Profile control"] # [inline (always)] pub const fn ctl (& self) -> & CTL { & self . ctl } # [doc = "0x04 - Profile status"] # [inline (always)] pub const fn status (& self) -> & STATUS { & self . status } # [doc = "0x10 - Profile command"] # [inline (always)] pub const fn cmd (& self) -> & CMD { & self . cmd } # [doc = "0x7c0 - Profile interrupt"] # [inline (always)] pub const fn intr (& self) -> & INTR { & self . intr } # [doc = "0x7c4 - Profile interrupt set"] # [inline (always)] pub const fn intr_set (& self) -> & INTR_SET { & self . intr_set } # [doc = "0x7c8 - Profile interrupt mask"] # [inline (always)] pub const fn intr_mask (& self) -> & INTR_MASK { & self . intr_mask } # [doc = "0x7cc - Profile interrupt masked"] # [inline (always)] pub const fn intr_masked (& self) -> & INTR_MASKED { & self . intr_masked } # [doc = "0x800..0x860 - Profile counter structure"] # [inline (always)] pub const fn cnt_struct (& self , n : usize) -> & CNT_STRUCT { # [allow (clippy :: no_effect)] [() ; 8] [n] ; unsafe { & * (self as * const Self) . cast :: < u8 > () . add (2048) . add (16 * n) . cast () } } } # [doc = "CTL (rw) register accessor: Profile control\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`ctl::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`ctl::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@ctl`]
module"] pub type CTL = crate :: Reg < ctl :: CTL_SPEC > ; # [doc = "Profile control"] pub mod ctl ; # [doc = "STATUS (r) register accessor: Profile status\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`status::R`].  See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@status`]
module"] pub type STATUS = crate :: Reg < status :: STATUS_SPEC > ; # [doc = "Profile status"] pub mod status ; # [doc = "CMD (rw) register accessor: Profile command\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`cmd::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`cmd::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@cmd`]
module"] pub type CMD = crate :: Reg < cmd :: CMD_SPEC > ; # [doc = "Profile command"] pub mod cmd ; # [doc = "INTR (rw) register accessor: Profile interrupt\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`intr::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`intr::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@intr`]
module"] pub type INTR = crate :: Reg < intr :: INTR_SPEC > ; # [doc = "Profile interrupt"] pub mod intr ; # [doc = "INTR_SET (rw) register accessor: Profile interrupt set\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`intr_set::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`intr_set::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@intr_set`]
module"] pub type INTR_SET = crate :: Reg < intr_set :: INTR_SET_SPEC > ; # [doc = "Profile interrupt set"] pub mod intr_set ; # [doc = "INTR_MASK (rw) register accessor: Profile interrupt mask\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`intr_mask::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`intr_mask::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@intr_mask`]
module"] pub type INTR_MASK = crate :: Reg < intr_mask :: INTR_MASK_SPEC > ; # [doc = "Profile interrupt mask"] pub mod intr_mask ; # [doc = "INTR_MASKED (r) register accessor: Profile interrupt masked\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`intr_masked::R`].  See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@intr_masked`]
module"] pub type INTR_MASKED = crate :: Reg < intr_masked :: INTR_MASKED_SPEC > ; # [doc = "Profile interrupt masked"] pub mod intr_masked ; # [doc = "Profile counter structure"] pub use self :: cnt_struct :: CNT_STRUCT ; # [doc = r"Cluster"] # [doc = "Profile counter structure"] pub mod cnt_struct ;